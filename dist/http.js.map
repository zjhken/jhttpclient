{"version":3,"sources":["../http.ts"],"sourcesContent":["export class JHttpClient {\n\tfetchOptions: RequestInit = {}\n\tprivate url = \"\"\n\tprivate headers: [string, string][] = []\n\tprivate queries: [string, string][] = []\n\tprivate abortController: AbortController | undefined = undefined\n\tprivate timeoutMilli = 0\n\n\tstatic createRequest(url: string) {\n\t\tlet http = new JHttpClient()\n\t\thttp.url = url\n\t\treturn http\n\t}\n\n\tstatic beforeSendFn: (() => Promise<void>) | null = null\n\n\tmethod(method: string): JHttpClient {\n\t\tthis.fetchOptions.method = method\n\t\treturn this\n\t}\n\n\taddHeader(key: string, value: string): JHttpClient {\n\t\tthis.headers = [...this.headers, [key, value]]\n\t\treturn this\n\t}\n\n\t/**\n\t * In HTTP RFC2616, header are allow to be duplicated\n\t * In this client, headers are stored in array form because the oder of heasers matters\n\t * So this set method will change all value with the same key\n\t * @param key \n\t * @param value if there are duplicated headers, they will combine together with value like v1, v2\n\t */\n\tsetHeader(key: string, value: string): JHttpClient {\n\t\tthis.headers.forEach(([oldKey, _], index) => {\n\t\t\tif (oldKey === key) {\n\t\t\t\tthis.headers[index] = [key, value]\n\t\t\t}\n\t\t})\n\t\treturn this\n\t}\n\n\tgetHeadersAsMap(): Map<string, string> {\n\t\tconst m = new Map()\n\t\tfor (let header of this.headers) {\n\t\t\tconst key = header[0]\n\t\t\tconst value = header[1]\n\t\t\tif (m.has(key)) {\n\t\t\t\tm.set(key, `${m.get(key)}, ${value}`)\n\t\t\t} else {\n\t\t\t\tm.set(key, value)\n\t\t\t}\n\t\t}\n\t\treturn m\n\t}\n\n\taddQuery(key: string, value: string): JHttpClient {\n\t\tthis.queries = [...this.queries, [key, value]]\n\t\treturn this\n\t}\n\n\t/**\n\t * HTTP query param is allow to be duplicated\n\t * So this set method will change all value with the same key\n\t * @param key \n\t * @param value \n\t */\n\tsetQuery(key: string, value: string): JHttpClient {\n\t\tthis.queries.forEach(([oldKey, _], index) => {\n\t\t\tif (oldKey === key) {\n\t\t\t\tthis.queries[index] = [key, value]\n\t\t\t}\n\t\t})\n\t\treturn this\n\t}\n\n\tgetQueriesAsMap(): Map<string, string[]> {\n\t\tconst m = new Map()\n\t\tfor (let header of this.headers) {\n\t\t\tconst key = header[0]\n\t\t\tconst value = header[1]\n\t\t\tif (m.has(key)) {\n\t\t\t\tm.set(key, [...m.get(key), value])\n\t\t\t} else {\n\t\t\t\tm.set(key, [value])\n\t\t\t}\n\t\t}\n\t\treturn m\n\t}\n\n\tsetBody(body: BodyInit): JHttpClient {\n\t\tthis.fetchOptions.body = body\n\t\treturn this\n\t}\n\n\tsetConnectionTimeout(milliseconds: number): JHttpClient {\n\t\tthis.abortController = new AbortController()\n\t\tthis.timeoutMilli = milliseconds\n\t\treturn this\n\t}\n\n\tasync send() {\n\t\tif (JHttpClient.beforeSendFn !== null) {\n\t\t\tawait JHttpClient.beforeSendFn()\n\t\t}\n\t\tif (this.headers.length > 0) {\n\t\t\tthis.fetchOptions.headers = this.headers\n\t\t}\n\t\tif (this.queries.length > 0) {\n\t\t\tif (!this.url.includes(\"?\")) {\n\t\t\t\tthis.url = this.url.concat(\"?\")\n\t\t\t}\n\t\t\tfor (const query of this.queries) {\n\t\t\t\tthis.url = this.url.concat(`${query[0]}=${query[1]}`)\n\t\t\t}\n\t\t}\n\t\tif (this.abortController) {\n\t\t\tthis.fetchOptions.signal = this.abortController.signal\n\t\t\tsetTimeout(() => this.abortController?.abort(), this.timeoutMilli)\n\t\t}\n\t\treturn fetch(this.url, this.fetchOptions);\n\t}\n}\n\nlet oldFetch: (input: RequestInfo | URL, init?: RequestInit | undefined) => Promise<Response> = function (_input: RequestInfo | URL, _init?: RequestInit | undefined) {\n\tconsole.log(\"oldFetch is empty\")\n\treturn new Promise((resolv, _reject) => {\n\t\tresolv(new Response)\n\t})\n}\n\n/**\n * should not use this\n * @param _input \n * @param _init \n * @returns \n */\nasync function interceptHttpReqGlobally(func: () => Promise<void>) {\n\toldFetch = window.fetch\n\tasync function newFetch(input: RequestInfo | URL, init?: RequestInit) {\n\t\tawait func()\n\t\treturn oldFetch(input, init)\n\t}\n\twindow.fetch = newFetch\n}\n\nexport class CommonHeaders {\n\tstatic CONTENT_LENGTH = \"Content-Length\"\n\tstatic HOST = \"Host\"\n}\n\n"],"mappings":"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","names":[]}